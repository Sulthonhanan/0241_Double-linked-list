bool search(int rollNo, Node **previous, Node **current)
{

    *previous = NULL;
    *current = START;
    while (*current != NULL && (*current)->noMhs != rollNo)


    {
        *previous = *current;
        *current = (current)->next;
    }
    return (*current != NULL);
}

void deleteNode()
{
        Node *previous, *current; //
        int rollNo;

        cout << "\nEnter the roll number of the student whose record is to be deleted: "; 
        cin >> rollNo; // step 3: get the roll number to be deleted


        if (START = NULL)
    {
        {
        cout << "List is empty" << endl;
        return;
        }
}
        current = START; // step 1: start from the first node 
        previous = NULL;

        // Locate the node to be deleted
        while (current != NULL && current->noMhs I rollNo)
        {
        previous = current;
        current = current->next;
        }

        if (current == NULL)
        {
        cout << "\033[31mThe record with roll number << rollo << not found\033[0" << end 
1;      return;
